After we begun THAIThon CPE Project, I will do...
-Thaithon option for run Python Clonning Syntax JavaScript. 

TO DO IN : ~0.5alpha1
-Recode all to be GPL, LGPL Code to be BSD, public domain, ...  license code (Nowaday, I will look about license type) and for fix some lasy core bug like qury string, etc.

TO DO IN : 0.2alpha1
-Decode sys.argv[1] that critical program when use it (open(sys.argv[1]), run thai charactor path/file by open with option of browser,etc) to correct form.
	--file:///home/a/Project/%E0%B9%80%E0%B8%82%E0%B8%B5%E0%B8%A2%E0%B8%99%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1/thaipe/thaipe/example/queryString/3.htma
	--file:///home/a/Project/เขียนโปรแกรม/thaipe/thaipe/example/queryString/3.htma
-Auto add head (<script src='/opt/thaipe/jslib/main.js'></script>,etc) to current target link click. 
-Add command option function.
-Clear value of self._strList, self._objList by check exist of javascript variable that refer to them.
-if can be - Make tinymce work.

TO DO IN : 0.1stable
-Clear bug.
-./applications/index.htma work fail.
-Bug in test suit.
-When click on "open in new tab" older tab will run fail.

Error like .-

        ** Message: console message: file:///media/voradhamma/%E0%B9%80%E0%B8%82%E0%B8%B5%E0%B8%A2%E0%B8%99%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1/thaipe/thaipe/applications/system/appman/index.htma @41: ReferenceError: Can't find variable: os

        Error : Incorect or does't exist importing module/file name : 'os'.

        Error > current file's built-in script or import script error :
            message : Result of expression 'window[modName]' [undefined] is not a constructor.
            line : 52
            sourceId : -1340202048
            expressionBeginOffset : 1584
            expressionCaretOffset : 1603
            expressionEndOffset : 1603
            name : TypeError
            toArray : function () {
            items=this;
          try {
            //this converts object into an array in non-ie browsers
                return Array.prototype.slice.call(items);
            }
            catch (ex) {
                var i	= 0,
                    len     = items.length,
                    result	= Array(len);

                while(i < len) {
                    result[i] = items[i];
                    i++;
                }

                return result;
            }	
        }
            stepSlice : function (start, stop, step) {
        return this;
        }
